name: Assignment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4

      - name: Dependencies
        run: go mod tidy

      - name: Run Tests
        run: go test ./... -v 

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4

      - name: Install golangci-lint
        run: sudo snap install golangci-lint --classic

      - name: Run Linter
        run: golangci-lint run ./...

  security:
    name: Run Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.4

      - name: Install Gosec
        run: go install github.com/securego/gosec/v2/cmd/gosec@latest

      - name: Run Security Scan
        run: gosec ./...

  deploy:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    needs: [test, lint, security]  # Ensure this job runs after the test, lint, and security jobs
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Minikube
        run: |
          # Install Minikube and kubectl
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          sudo install minikube-linux-amd64 /usr/local/bin/minikube
          curl -LO "https://dl.k8s.io/release/v1.23.0/bin/linux/amd64/kubectl"
          sudo install kubectl /usr/local/bin/
          
          # Start Minikube with Docker driver
          minikube start --driver=docker

      - name: Run create_secret.sh to create Kubernetes secrets
        run: |
          chmod +x ./scripts/create_secret.sh
          ./scripts/create_secret.sh

      - name: Apply Kubernetes Deployment
        run: |
          kubectl apply -f kubernetes/deployment.yml 
          
      - name: Expose the application
        run: |
          kubectl expose deployment github-api-service --type=LoadBalancer --name=github-api-service --port=8080
          
      - name: Check Deployment Status
        run: |
          kubectl get pods